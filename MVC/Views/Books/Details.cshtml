@model BookModel

@* Generated from Custom Template. *@
@* Model namespace using directive should be added to _ViewImports.cshtml. *@

@{
    var containerDivClass = "container";
}
@{
    ViewData["Title"] = "Book Details";
}

<div class="@containerDivClass">
    <h3>@ViewData["Title"]</h3>
    <hr />
</div>

@if (Model is not null)
{
<div class="@containerDivClass">
    @if (TempData["Message"] is not null)
    {
    <p class="text-danger">
        @TempData["Message"]
    </p>
    }
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.Title)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.Title)
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.PublicationYear)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.PublicationYear)
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.AvailableCopies)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.AvailableCopies)
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.TotalCopies)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.TotalCopies)
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.Author)
        </div>
        <div class="col-10">
            @Html.DisplayFor(model => model.Author)
        </div>
    </div>

@* Can be uncommented and used for many to many relationships. ManyToManyRecord may be replaced with the related entiy name in the controller and views. *@
    
    @* Way 1: *@
    @*<div class="row mb-3">
        <div class="col-2 fw-bold">
            <b>@Html.DisplayNameFor(model => model.CategoryList)</b>
        </div>
        <div class="col-10">
            @if (Model.CategoryList is not null && Model.CategoryList.Any())
            {
                foreach (var categoryItem in Model.CategoryList)
                {
                    @(categoryItem.Name + "<br>");
                }
            }
        </div>
    </div>*@
    @* Way 2: *@
    <div class="row mb-3">
        <div class="col-2 fw-bold">
            @Html.DisplayNameFor(model => model.Categories)
        </div>
        <div class="col-10">
            @Html.Raw(Model.Categories)
        </div>
    </div>

    <hr /> 
    <a asp-action="Index">Back to List</a>
</div>
}
